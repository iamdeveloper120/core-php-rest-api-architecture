<?php
namespace Src\Controller;

use Exception;

class HotelController {

    private $requestMethod;

    public function __construct($requestMethod)
    {
        $this->requestMethod = $requestMethod;
    }

    function authenticate() {
        $apiKey = $_ENV['API_KEY'] ?? "7b963dff90f0e5d32b3e2cf49c9c50a7";
        $Secret = $_ENV['SECRET'] ?? "5ef5ac4763" ;
        // Signature is generated by SHA256 (Api-Key + Secret + Timestamp (in seconds))
        $signature = hash("sha256", $apiKey.$Secret.time());
        $endpoint = "https://api.test.hotelbeds.com/hotel-api/1.0/status";
        echo "Your API Key is: " . $apiKey . "<br>";
        echo "Your X-Signature is: " . $signature . "<br><br>";
        try {
            $curl = curl_init();
            curl_setopt_array($curl, array(
                CURLOPT_RETURNTRANSFER => 1,
                CURLOPT_URL => $endpoint,
                CURLOPT_HTTPHEADER => ['Accept:application/json' , 'Api-key:'.$apiKey.'', 'X-Signature:'.$signature.'']
            ));
            $resp = curl_exec($curl);
            if (!curl_errno($curl)) {
                switch ($http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE)) {
                    case 200:  # OK
                        echo "Server JSON Response:<br>" . $resp;
                        break;
                    default:
                        echo 'Unexpected HTTP code: ', $http_code, "\n";
                        echo $resp;
                }
            }
            curl_close($curl);
        } catch (Exception $ex) {
            printf("Error while sending request, reason: %s\n",$ex->getMessage ());
        }
    }

    public function getHotels()
    {
        // for testing purpose | using the credentials here.
        $apiKey = $_ENV['API_KEY'] ?? "7b963dff90f0e5d32b3e2cf49c9c50a7";
        $Secret = $_ENV['SECRET'] ?? "5ef5ac4763";
        // Signature SHA256 (ApiKey + Secret + Timestamp (in seconds))
        $signature = hash("sha256", $apiKey.$Secret.time());
        $endpoint = "https://api.test.hotelbeds.com/hotel-content-api/1.0/hotels";
        try {
            $curl = curl_init();
            // Filter to limit the results for an specific country
            $params = array('countryCode' => 'AE'); // US, PK, etc 
            curl_setopt_array($curl, array(
                CURLOPT_RETURNTRANSFER => 1,
                CURLOPT_URL => $endpoint.'?'.http_build_query($params),
                CURLOPT_HTTPHEADER => ['Accept:application/json' , 'Api-key:'.$apiKey.'', 'X-Signature:'.$signature.'']
            ));
            $resp = curl_exec($curl);
            if (!curl_errno($curl)) {
                switch ($http_code = curl_getinfo($curl, CURLINFO_HTTP_CODE)) {
                    case 200:  # OK
                        echo $resp;
                        break;
                    default:
                        echo 'Unexpected HTTP code: ', $http_code, "\n";
                        echo $resp;
                }
            }
            curl_close($curl);
        } catch (Exception $ex) {
            printf("Error while sending request, reason: %s\n",$ex->getMessage ());
        }
    }

    public function processRequest()
    {
        switch ($this->requestMethod) {
            case 'GET':
                $response = $this->getHotels();
                break;
            case 'POST':
                // implement post request methods
                break;
            case 'PUT':
                // implement put | patch request methods
                break;
            case 'DELETE':
                // implement delete request methods
                break;
            default:
                $response = $this->notFoundResponse();
                break;
        }
        return $response;
    }

    private function notFoundResponse()
    {
        $response['status_code_header'] = 'HTTP/1.1 404 Not Found';
        $response['body'] = null;
        return $response;
    }
}
